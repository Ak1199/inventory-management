from keras.models import Sequential
from keras.layers import Dense
from keras.layers import Convolution2D
from keras.layers import MaxPooling2D
from keras.layers import Flatten
from keras.preprocessing.image import ImageDataGenerator
import numpy as np

#Loading the image dataset
train_datagen=ImageDataGenerator(rescale=1./255,shear_range=0.
2,zoom_range=0.2,horizontal_flip=True)
test_datagen=ImageDataGenerator(rescale=1./255)
x_train=train_datagen.flow_from_directory(r'C:\Users\Lenovo\Deskt
op\dataset\train_set',target_size=(64,64),batch_size=1,class_mode='
categorical')
x_test=test_datagen.flow_from_directory(r'C:\Users\Lenovo\Desktop\
dataset\test_set',target_size=(64,64),batch_size=1,class_mode='categ
orical')
#Building the model
model=Sequential()
model.add(Convolution2D(32,(3,3),input_shape =
(64,64,3),activation='relu'))

model.add(MaxPooling2D(pool_size=(2,2)))
model.add(Flatten())
model.add(Dense(output_dim=128,init='uniform',activation='relu'))
model.add(Dense(output_dim=opdim,activation='softmax',init='unifo
rm'))
model.compile(loss='categorical_crossentropy',optimizer='adam',met
rics=['accuracy'])

#Iterations to create model
model.fit_generator(x_train,steps_per_epoch=(x_train.samples),
epochs=20,validation_data=x_test,validation_steps=x_test.samples)

#Saving the model
model.save(r"C:\Users\Lenovo\Desktop\Mini
Proj\gui_sourced_model.h5")
